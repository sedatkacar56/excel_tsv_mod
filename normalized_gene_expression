import pandas as pd
import os
import matplotlib.pyplot as plt

# Define the directory to save the Excel file
output_directory = "C:/Users/sedat/Downloads/ccl_GTEX/excel_output"

# Create the output directory if it doesn't exist
os.makedirs(output_directory, exist_ok=True)

# Initialize an empty DataFrame to store mean values
summary_data = pd.DataFrame(columns=['CCL', 'Sample_Type', 'Normalized_Mean_Gene_Expression'])

# Loop through files from ccl1.tsv to ccl28.tsv
for i in range(1, 29):
    try:
        # Construct the filename
        filename = f"C:/Users/sedat/Downloads/ccl_GTEX/ccl{i}.tsv"
        
        # Read TSV data with headers
        data = pd.read_csv(filename, sep='\t')

        # Define the sample types to include
        sample_types_to_include = ["Primary Tumor", "Solid Tissue Normal", "Normal Tissue"]

        # Filter data and select relevant columns
        filtered_data = data[data['_sample_type'].isin(sample_types_to_include)][['_sample_type', data.columns[2]]]

        # Rename columns for clarity
        filtered_data.columns = ['Sample_Type', 'Gene_Expression']

        # Calculate mean values
        mean_values = filtered_data.groupby('Sample_Type')['Gene_Expression'].mean()

        # Calculate the normalization factor for "Normal Tissue" samples
        normal_mean_value = mean_values.loc['Normal Tissue']

        # Normalize mean values by dividing by the mean of "Normal Tissue" samples for each CCL
        normalized_mean_values = mean_values / normal_mean_value

        # Append the normalized mean values to the DataFrame
        normalized_data = pd.DataFrame({'CCL': [f'ccl{i}'] * len(normalized_mean_values),
                                        'Sample_Type': normalized_mean_values.index,
                                        'Normalized_Mean_Gene_Expression': normalized_mean_values.values})
        summary_data = pd.concat([summary_data, normalized_data], ignore_index=True)

        print(f"Mean values calculated for {filename}")

    except FileNotFoundError:
        print(f"File not found: {filename}. Skipping...")

# Save the normalized summary data to an Excel file
normalized_excel_filename = os.path.join(output_directory, "normalized_mean_data.xlsx")
summary_data.to_excel(normalized_excel_filename, index=False)

print(f"Normalized mean data saved to: {normalized_excel_filename}")

# Create separate graphs for "Primary Tumor" and "Solid Tissue Normal" samples
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
primary_tumor_data = summary_data[summary_data['Sample_Type'] == 'Primary Tumor']
plt.bar(primary_tumor_data['CCL'], primary_tumor_data['Normalized_Mean_Gene_Expression'])
plt.xlabel('CCL')
plt.ylabel('Normalized Mean Gene Expression')
plt.title('Normalized Mean Gene Expression for Primary Tumor Samples')
plt.xticks(rotation=45)

plt.subplot(1, 2, 2)
solid_tissue_normal_data = summary_data[summary_data['Sample_Type'] == 'Solid Tissue Normal']
plt.bar(solid_tissue_normal_data['CCL'], solid_tissue_normal_data['Normalized_Mean_Gene_Expression'])
plt.xlabel('CCL')
plt.ylabel('Normalized Mean Gene Expression')
plt.title('Normalized Mean Gene Expression for Solid Tissue Normal Samples')
plt.xticks(rotation=45)

plt.tight_layout()
plt.show()
